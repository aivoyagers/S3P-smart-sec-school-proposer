package com.testspace.test_smart_sec_school_proposer;
import java.io.BufferedReader;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Calendar;

import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

/**
 * This class was automatically generated by the data modeler tool.
 */

@org.kie.api.definition.type.Label("Selected School")
public class SelectedSchool implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	@org.kie.api.definition.type.Label(value = "School")
	private com.testspace.test_smart_sec_school_proposer.School school;

	public SelectedSchool() {
	}

	public com.testspace.test_smart_sec_school_proposer.School getSchool() {
		return this.school;
	}

	public void setSchool(
			com.testspace.test_smart_sec_school_proposer.School school) {
		this.school = school;
	}

	public SelectedSchool(
			com.testspace.test_smart_sec_school_proposer.School school) {
		this.school = school;
	}
	
    public void populateTravelDuration(int postalCode){
        System.out.println("postalCode"+postalCode);
        
        BufferedReader br;
		String xPathString= "//text/text()";
		HttpURLConnection conn;
		XPathFactory factory = XPathFactory.newInstance();
	    XPath xpath = factory.newXPath();
	    
	    
	    Calendar calendar = Calendar.getInstance();
	  
	    calendar.set(Calendar.HOUR_OF_DAY,7);
	    calendar.set(Calendar.MINUTE,30);
	    calendar.set(Calendar.SECOND,0);
	    calendar.set(Calendar.MILLISECOND,0);
	    
	 	calendar.add(Calendar.DATE,1);
	
	    while( (Calendar.SATURDAY == calendar.get(calendar.DAY_OF_WEEK)) ||  (Calendar.SUNDAY == calendar.get(calendar.DAY_OF_WEEK)))
	        calendar.add(Calendar.DATE,1);
	  
	    
	    long milliseconds = calendar.getTimeInMillis();
	    
	    
	    long seconds = milliseconds / 1000;
	   
	    try {

		    URL url = new URL("https://maps.googleapis.com/maps/api/distancematrix/xml?units=metric&origins="+postalCode+",Singapore&destinations="+school.getPostalCode()+",Singapore&departure_time="+seconds+"+&key=AIzaSyB_N432H-hh9lmZ7dCARevj40vlPzR_jeE");
		    conn = (HttpURLConnection) url.openConnection();
	

    		if (conn.getResponseCode() != 200) {
    			throw new RuntimeException("Failed : HTTP error code : "+ conn.getResponseCode());
    		}

		  InputSource inputXml = new InputSource(conn.getInputStream());
    	  NodeList nodes = (NodeList) xpath.evaluate(xPathString, inputXml, XPathConstants.NODESET);
    	  
    	  String durationStr = nodes.item(2).getTextContent();
    	  String replacedDurationStr = durationStr.replaceAll(" mins","");
    	  int duration  = Integer.parseInt(replacedDurationStr);

    	  
    	  
    	  String distanceStr = nodes.item(1).getTextContent();
    	  String replaceDistanceStr = distanceStr.replaceAll(" km","");
    	  float distance  = Float.parseFloat(replaceDistanceStr);


    	  school.setTravelDuration(duration);
    	  school.setTravelDistance(distance);
    	  
    	  System.out.println(getSchool().getTravelDuration());
          System.out.println(getSchool().getTravelDistance());

	      conn.disconnect();

	   }
	   catch (MalformedURLException e) {
    		e.printStackTrace();
       }
       catch (IOException e) {
        	e.printStackTrace();
       }
	   catch (XPathExpressionException ex) {
		  System.out.print("XPath Error");
	   } 

        
        
    }

}